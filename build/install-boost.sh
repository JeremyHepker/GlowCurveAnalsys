#!/bin/bash -e
#
# Usage: ./install-boost <version: x.xx.x>

: ${PATH:=/usr/}

TARBALL="boost_1_62_0.tar.gz"
DOWNLOAD_URL="https://sourceforge.net/projects/boost/files/boost/1.62.0/boost_1_62_0.tar.gz/download"

GCC_VERSION="$(gcc -dumpversion)"

# Installation location

cd "/usr/"
PREFIX="$(pwd)"

echo "[INFO] Installing to '$PREFIX'"

SOURCE="$(pwd)/boost_boost_1_62_0/"

#-------------------------------------------------------------------------------
# Download and unpack
#-------------------------------------------------------------------------------
if [ ! -f "$TARBALL" ]; then
    echo "[INFO] Downloading '$DOWNLOAD_URL'"
    sudo curl -O "$DOWNLOAD_URL"
else
    echo "[INFO] '$TARBALL' already exists. Skipping..."
fi

if [ ! -d "$SOURCE" ]; then
    echo "[INFO] Unpacking $TARBALL"
    sudo tar xzf "$TARBALL"
else
    echo "[INFO] '$SOURCE' already exists. Skipping..."
fi

#-------------------------------------------------------------------------------
# Setup build environment and toolchain
#-------------------------------------------------------------------------------
echo "[INFO] Build environment:"
echo "[INFO] - BOOST  ${GCC_VERSION}"

#-------------------------------------------------------------------------------
# Build and install
#-------------------------------------------------------------------------------
cd "$SOURCE"

if [ ! -e "${PREFIX}/bin" ]; then
    echo "[INFO] Configuring BOOST"
    time "./bootstrap.sh" --prefix="${PREFIX}"

    echo "[INFO] Building BOOST"
    BOOST_BUILD_CMD=
    if [ -e "${SOURCE}/bjam" ]; then
        BOOST_BUILD_CMD="bjam"
    elif [ -e "${SOURCE}/b2" ]; then
        BOOST_BUILD_CMD="b2"
    else
      echo "[ERROR] boost build script not found (bjam/b2)"
    fi

    PROCESSORS="$(cat /proc/cpuinfo | grep processor | wc -l)"
    PARALLELISM="$((($PROCESSORS * 2)))"
    echo "[INFO] Using '$PARALLELISM' levels of parallelism"

    time "./${BOOST_BUILD_CMD}" install --prefix="${PREFIX}" -j "${PARALLELISM}"

    if [ "$(uname --machine)" = "x86_64" ]; then
        export LIBDIR="lib64"
    else
        export LIBDIR="lib"
    fi

    echo "[INFO] Creating BOOST environment setup file"
    cat > "${PREFIX}/setup.sh" <<-EOF
#!/bin/bash
#
# Automatically generated by $0 on $(date)
export BOOST_HOME="${PREFIX}"
export LD_LIBRARY_PATH="\${BOOST_HOME}/lib:\${LD_LIBRARY_PATH}"

source "${GCC_HOME}/setup.sh"
EOF

    echo "[INFO] Setting file permissions for group"

    chmod -R g+r "${PREFIX}"
    find "${PREFIX}" -type d -exec chmod g+x {} \;
else
    echo "[INFO] Installation already exists in '$PREFIX'. Skipping..."
fi

echo "[INFO] Success!"
